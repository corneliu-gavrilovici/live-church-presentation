<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
	xmlns:LiveBiblePresentation="clr-namespace:LiveBiblePresentation"
	x:Class="LiveBiblePresentation.App"
	StartupUri="MainForm.xaml">
	<Application.Resources>
		<!-- Resources scoped at the Application level should be defined here. -->
		<ResourceDictionary>
		<ResourceDictionary.MergedDictionaries>
			<ResourceDictionary Source="Simple Styles.xaml"/>
			<ResourceDictionary Source="MyResourceDictionary.xaml"/>
		</ResourceDictionary.MergedDictionaries>
			<SolidColorBrush x:Key="greenBorder" Color="#186f00" />
			<DrawingBrush x:Key="greenBackground">
				<DrawingBrush.Drawing>
					<DrawingGroup>
						<GeometryDrawing>
							<GeometryDrawing.Brush>
								<RadialGradientBrush Center="0.54326,0.45465" RadiusX="0.602049" RadiusY="1.02049" GradientOrigin="0.4326,0.45465">
									<GradientStop Color="#f3ff57" Offset="0"/>
									<GradientStop Color="#6cc715" Offset="0.718518495559692"/>
									<GradientStop Color="#186f00" Offset="1"/>
								</RadialGradientBrush>
							</GeometryDrawing.Brush>
							<GeometryDrawing.Geometry>
								<RectangleGeometry Rect="0,0 1,1" />
							</GeometryDrawing.Geometry>
						</GeometryDrawing>
						<GeometryDrawing>
							<GeometryDrawing.Brush>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1" SpreadMethod="Pad">
									<GradientStop Color="#FFFFFFFF" Offset="0"/>
									<GradientStop Color="#22FFFFFF" Offset="1"/>
								</LinearGradientBrush>
							</GeometryDrawing.Brush>
							<GeometryDrawing.Geometry>
								<RectangleGeometry Rect="0,0 1,0.48" />
							</GeometryDrawing.Geometry>
						</GeometryDrawing>
					</DrawingGroup>
				</DrawingBrush.Drawing>
			</DrawingBrush>
		<Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
			<Style.BasedOn>
				<Style TargetType="{x:Type TextBox}">
					<Setter Property="BorderBrush">
						<Setter.Value>
							<SolidColorBrush/>
						</Setter.Value>
					</Setter>
					<Setter Property="BorderThickness" Value="2,2,2,2"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
					<Setter Property="Padding" Value="1,1,1,1"/>
					<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
					<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
					<Setter Property="AllowDrop" Value="True"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TextBox}">
								<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderStyle="Sunken" BorderThickness="{TemplateBinding BorderThickness}">
									<ScrollViewer x:Name="PART_ContentHost" Template="{DynamicResource ScrollViewerControlTemplate1}"/>
								</Microsoft_Windows_Themes:ClassicBorderDecorator>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Style.BasedOn>
		</Style>
		<ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" x:Name="Corner" Grid.Column="1" Grid.Row="1"/>
				<ScrollContentPresenter Margin="{TemplateBinding Padding}" x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
				<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Style="{DynamicResource SimpleScrollBar}" Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="VerticalScrollBar"/>
				<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Column="0" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
			</Grid>
		</ControlTemplate>
		<Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<SolidColorBrush/>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderThickness" Value="3,3,3,3"/>
			<Setter Property="Margin" Value="0,0,0,0"/>
			<Setter Property="Padding" Value="1,1,1,1"/>
			<Setter Property="MinWidth" Value="10"/>
			<Setter Property="MinHeight" Value="10"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0"/>
								<ColumnDefinition Width="0" x:Name="ColumnDefinition1"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
								<RowDefinition x:Name="RowDefinition1" Height="*"/>
							</Grid.RowDefinitions>
							<TabPanel HorizontalAlignment="Center" Margin="2,2,2,0" x:Name="HeaderPanel" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="0" Background="#00FFFFFF" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>
							<Grid x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<Microsoft_Windows_Themes:ClassicBorderDecorator Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderStyle="Raised" BorderThickness="{TemplateBinding BorderThickness}">
									<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2,2,2,2" x:Name="PART_SelectedContentHost" Content="{TemplateBinding SelectedContent}" ContentSource="SelectedContent" ContentTemplate="{TemplateBinding SelectedContentTemplate}"/>
								</Microsoft_Windows_Themes:ClassicBorderDecorator>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="TabStripPlacement" Value="Bottom">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Left">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
							</Trigger>
							<Trigger Property="TabStripPlacement" Value="Right">
								<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
								<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
								<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
								<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
								<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
								<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
								<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
								<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
			<LinearGradientBrush x:Key="BrushBtnBack" EndPoint="0.528,-0.025" StartPoint="0.528,1.124">
				<GradientStop Color="#7F3A7927" Offset="0"/>
				<GradientStop Color="#FF4FAC35" Offset="1"/>
			</LinearGradientBrush>
			<LinearGradientBrush x:Key="BrushSelected" EndPoint="0.528,-0.025" StartPoint="0.528,1.124">
				<GradientStop Color="#7F3A7927" Offset="0"/>
				<GradientStop Color="#7F4FAC35" Offset="1"/>
			</LinearGradientBrush>
		<Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
			<Setter Property="Padding" Value="12,2,12,2"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Border SnapsToDevicePixels="True" x:Name="Border" BorderThickness="1,1,1,1" BorderBrush="#FF145704" CornerRadius="3,3,3,3" Background="{DynamicResource BrushBtnBack}">
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" Content="{TemplateBinding Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Panel.ZIndex" Value="1"/>
								<Setter Property="Background" TargetName="Border" Value="{DynamicResource BrushSelected}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="TabStripPlacement" Value="Top"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="TabStripPlacement" Value="Bottom"/>
								</MultiTrigger.Conditions>
								<Setter Property="Margin" Value="-2,-2,-2,-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="TabStripPlacement" Value="Left"/>
								</MultiTrigger.Conditions>
								<Setter Property="Padding" Value="11,2,14,2"/>
								<Setter Property="Margin" Value="-2,-2,-2,-2"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="TabStripPlacement" Value="Right"/>
								</MultiTrigger.Conditions>
								<Setter Property="Padding" Value="14,2,11,2"/>
								<Setter Property="Margin" Value="-2,-2,-2,-2"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Foreground" Value="#FFFFFFFF"/>
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"/>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ButtonStyleArrow" BasedOn="{x:Null}" TargetType="{x:Type ToggleButton}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Image Source="Resources\back.png" Stretch="Fill" x:Name="image" RenderTransformOrigin="0.5,0.5">
							<Image.LayoutTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="180"/>
									<TranslateTransform X="0" Y="0"/>
								</TransformGroup>
							</Image.LayoutTransform>
							<Image.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="1" ScaleY="1"/>
									<SkewTransform AngleX="0" AngleY="0"/>
									<RotateTransform Angle="0"/>
									<TranslateTransform X="0" Y="0"/>
								</TransformGroup>
							</Image.RenderTransform>
						</Image>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Opacity" TargetName="image" Value="0.5"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="True">
								<Setter Property="RenderTransform" TargetName="image">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform ScaleX="1" ScaleY="1"/>
											<SkewTransform AngleX="0" AngleY="0"/>
											<RotateTransform Angle="180"/>
											<TranslateTransform X="0" Y="0"/>
										</TransformGroup>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="BrushBackground" EndPoint="0.493,-0.325" StartPoint="0.493,1.693">
			<GradientStop Color="#CCE1F0BE" Offset="0.096"/>
			<GradientStop Color="#FF235312" Offset="1"/>
			<GradientStop Color="#FF679E2E" Offset="0.423"/>
		</LinearGradientBrush>
		<Style x:Key="ButtonStyleFont" BasedOn="{x:Null}" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Ellipse Stroke="#99614933" StrokeThickness="2" x:Name="ellipse">
								<Ellipse.Fill>
									<RadialGradientBrush GradientOrigin="0.502,0.976">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="0.8" ScaleY="0.547"/>
												<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
												<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
												<TranslateTransform X="0.004" Y="0.199"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Color="#FFB78D3D" Offset="0"/>
										<GradientStop Color="#7FFFA500" Offset="1"/>
									</RadialGradientBrush>
								</Ellipse.Fill>
							</Ellipse>
							<Path Margin="1.58,1.16,2.21,15.898" Stretch="Fill" Stroke="{x:Null}" StrokeThickness="0">
								<Path.Fill>
									<LinearGradientBrush EndPoint="0.494,0.089" StartPoint="0.494,0.702">
									<GradientStop Color="#26FFFFFF" Offset="0"/>
									<GradientStop Color="#D8FFFFFF" Offset="1"/>
								</LinearGradientBrush>
								</Path.Fill>
								<Path.Data>
									<PathGeometry>
										<PathFigure IsClosed="True" StartPoint="110.302696141352,16.8991731660148">
											<PolyBezierSegment Points="110.3027,25.892302 78.328031,17.149781 50.224193,17.149781 22.120355,17.149781 -8.8253296,25.714782 -8.8253296,16.721654 -8.8253296,7.728525 22.76409,-1.6275665 50.867928,-1.6275665 78.971766,-1.6275665 110.09597,7.2639988 110.09597,16.257128" IsSmoothJoin="True"/>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Fill" TargetName="ellipse">
									<Setter.Value>
										<RadialGradientBrush GradientOrigin="0.502,0.976">
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="0.66" ScaleY="0.452"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0.014" Y="0.234"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#FFECCB8C" Offset="0"/>
											<GradientStop Color="#FFFFC04C" Offset="1"/>
										</RadialGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ButtonStyleSearch" BasedOn="{x:Null}" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Ellipse Fill="{x:Null}" Stroke="{x:Null}" StrokeThickness="0"/>
							<Image Margin="0,0,0,0" Source="button_search.png" Stretch="Fill"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RichTextBoxStyle1" TargetType="{x:Type RichTextBox}">
			<Style.Resources>
				<Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
					<Setter Property="OverridesDefaultStyle" Value="True"/>
				</Style>
				<Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
					<Style.BasedOn>
						<Style TargetType="{x:Type Hyperlink}">
							<Setter Property="Foreground" Value="#FF0000FF"/>
							<Setter Property="TextDecorations" Value="Underline"/>
							<Style.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter Property="Foreground" Value="#FFFF0000"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsEnabled" Value="True">
									<Setter Property="Cursor" Value="Hand"/>
								</Trigger>
							</Style.Triggers>
						</Style>
					</Style.BasedOn>
					<Style.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="#FF0000FF"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Style.Resources>
			<Setter Property="MinWidth" Value="10"/>
			<Style.BasedOn>
				<Style TargetType="{x:Type RichTextBox}">
					<Setter Property="BorderBrush">
						<Setter.Value>
							<SolidColorBrush/>
						</Setter.Value>
					</Setter>
					<Setter Property="BorderThickness" Value="2,2,2,2"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
					<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
					<Setter Property="Padding" Value="1,1,1,1"/>
					<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
					<Setter Property="HorizontalContentAlignment" Value="Left"/>
					<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
					<Setter Property="AllowDrop" Value="True"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type RichTextBox}">
								<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderStyle="Sunken" BorderThickness="{TemplateBinding BorderThickness}">
									<ScrollViewer x:Name="PART_ContentHost" Template="{DynamicResource ScrollViewerControlTemplate1}" Style="{DynamicResource SimpleScrollViewer}"/>
								</Microsoft_Windows_Themes:ClassicBorderDecorator>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Style.BasedOn>
		</Style>
		<Style x:Key="ButtonStyleVideo" BasedOn="{x:Null}" TargetType="{x:Type Button}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Rectangle Fill="{x:Null}" Stroke="{x:Null}"/>
							<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
			<Setter Property="Background" Value="#00FFFFFF"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Slider}">
						<Border Width="{TemplateBinding Width}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" Fill="{TemplateBinding Foreground}" Placement="Top"/>
								<Microsoft_Windows_Themes:ClassicBorderDecorator Margin="0,0,0,1" x:Name="TrackBackground" Height="4" BorderStyle="Sunken" BorderThickness="2,2,2,2" Grid.Row="1">
									<Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
										<SolidColorBrush/>
									</Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
									<Canvas Margin="-2,-2,-2,-2" Background="#FF000000">
										<Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="4" Fill="{DynamicResource BrushBackground}"/>
									</Canvas>
								</Microsoft_Windows_Themes:ClassicBorderDecorator>
								<Track x:Name="PART_Track" Grid.Row="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="Slider.DecreaseLarge">
											<RepeatButton.Style>
												<Style TargetType="{x:Type RepeatButton}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="IsTabStop" Value="False"/>
													<Setter Property="Focusable" Value="False"/>
													<Setter Property="Background" Value="#00FFFFFF"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type RepeatButton}">
																<Border Background="{TemplateBinding Background}"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</RepeatButton.Style>
										</RepeatButton>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="Slider.IncreaseLarge">
											<RepeatButton.Style>
												<Style TargetType="{x:Type RepeatButton}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="IsTabStop" Value="False"/>
													<Setter Property="Focusable" Value="False"/>
													<Setter Property="Background" Value="#00FFFFFF"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type RepeatButton}">
																<Border Background="{TemplateBinding Background}"/>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</RepeatButton.Style>
										</RepeatButton>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb x:Name="Thumb" Background="#FF000000" Width="30" Height="30">
										<Thumb.Style>
											<Style TargetType="{x:Type Thumb}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="Foreground" Value="{x:Null}"/>
												<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
												<Setter Property="Height" Value="21"/>
												<Setter Property="Width" Value="11"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type Thumb}">
															<Image Width="Auto" Height="Auto" Source="fish.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
														<Image.RenderTransform>
															<TransformGroup>
																<ScaleTransform ScaleX="1" ScaleY="1"/>
																<SkewTransform AngleX="0" AngleY="0"/>
																<RotateTransform Angle="180"/>
																<TranslateTransform X="0" Y="0"/>
															</TransformGroup>
														</Image.RenderTransform>
													</Image>
															<ControlTemplate.Triggers>
																<Trigger Property="IsDragging" Value="True">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</Thumb.Style>
									</Thumb>
									</Track.Thumb>
								</Track>
								<TickBar Visibility="Collapsed" x:Name="BottomTick" Height="4" Grid.Row="2" Fill="{TemplateBinding Foreground}" Placement="Bottom"/>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="TickPlacement" Value="TopLeft">
								<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
								<Setter Property="Style" TargetName="Thumb">
									<Setter.Value>
										<Style TargetType="{x:Type Thumb}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Foreground" Value="{x:Null}"/>
											<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
											<Setter Property="Height" Value="21"/>
											<Setter Property="Width" Value="11"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type Thumb}">
														<Canvas SnapsToDevicePixels="True">
															<Path Fill="{TemplateBinding Background}" Data="M11,21L0,21 0,6 5,1 6,1 11,6z"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1" Data="M0.5,20L0.5,5.5 5,0.5 5.5,0.5"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Data="M5.5,0.5L6,0.5 10.5,5.5 10.5,20.5 0,20.5"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1" Data="M1.5,19L1.5,5.5 5,1.5 5.5,1.5"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" Data="M5.5,1.5L6,1.5 9.5,5.5 9.5,19.5 1,19.5"/>
															<Path Opacity="0.5" Fill="{TemplateBinding Foreground}" Data="M9,19L2,19 2,6 5.5,2 9,6z"/>
														</Canvas>
														<ControlTemplate.Triggers>
															<Trigger Property="IsDragging" Value="True">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</Setter.Value>
								</Setter>
								<Setter Property="Margin" TargetName="TrackBackground" Value="0,3,0,0"/>
							</Trigger>
							<Trigger Property="TickPlacement" Value="BottomRight">
								<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
								<Setter Property="Style" TargetName="Thumb">
									<Setter.Value>
										<Style TargetType="{x:Type Thumb}">
											<Setter Property="OverridesDefaultStyle" Value="True"/>
											<Setter Property="Foreground" Value="{x:Null}"/>
											<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
											<Setter Property="Height" Value="21"/>
											<Setter Property="Width" Value="11"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type Thumb}">
														<Canvas SnapsToDevicePixels="True">
															<Path Fill="{TemplateBinding Background}" Data="M11,0L0,0 0,15 5,21 6,21 11,15z"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1" Data="M10,0.5L0.5,0.5 0.5,15.5 5,20.5 5.5,20.5"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Data="M5.5,20.5L6,20.5 10.5,15.5 10.5,0"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1" Data="M9,1.5L1.5,1.5 1.5,15.5 5,19.5 5.5,19.5"/>
															<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" Data="M5.5,19.5L6,19.5 9.5,15.5 9.5,1"/>
															<Path Opacity="0.5" Fill="{TemplateBinding Foreground}" Data="M9,2L2,2 2,15 5.5,19 9,15z"/>
														</Canvas>
														<ControlTemplate.Triggers>
															<Trigger Property="IsDragging" Value="True">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</Setter.Value>
								</Setter>
								<Setter Property="Margin" TargetName="TrackBackground" Value="0,0,0,3"/>
							</Trigger>
							<Trigger Property="TickPlacement" Value="Both">
								<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
								<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
							</Trigger>
							<Trigger Property="IsSelectionRangeEnabled" Value="True">
								<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Slider}">
								<Border Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="*"/>
										</Grid.RowDefinitions>
										<TickBar Visibility="Collapsed" x:Name="LeftTick" Width="4" Fill="{TemplateBinding Foreground}" Placement="Left"/>
										<Microsoft_Windows_Themes:ClassicBorderDecorator Margin="0,0,1,0" x:Name="TrackBackground" Width="4" BorderStyle="Sunken" BorderThickness="2,2,2,2" Grid.Column="1">
											<Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
												<SolidColorBrush/>
											</Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
											<Canvas Margin="-2,-2,-2,-2">
												<Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Width="4" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
											</Canvas>
										</Microsoft_Windows_Themes:ClassicBorderDecorator>
										<Track x:Name="PART_Track" Grid.Column="1">
											<Track.DecreaseRepeatButton>
												<RepeatButton Command="Slider.DecreaseLarge">
													<RepeatButton.Style>
														<Style TargetType="{x:Type RepeatButton}">
															<Setter Property="OverridesDefaultStyle" Value="True"/>
															<Setter Property="IsTabStop" Value="False"/>
															<Setter Property="Focusable" Value="False"/>
															<Setter Property="Background" Value="#00FFFFFF"/>
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type RepeatButton}">
																		<Border Background="{TemplateBinding Background}"/>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</RepeatButton.Style>
												</RepeatButton>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Command="Slider.IncreaseLarge">
													<RepeatButton.Style>
														<Style TargetType="{x:Type RepeatButton}">
															<Setter Property="OverridesDefaultStyle" Value="True"/>
															<Setter Property="IsTabStop" Value="False"/>
															<Setter Property="Focusable" Value="False"/>
															<Setter Property="Background" Value="#00FFFFFF"/>
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type RepeatButton}">
																		<Border Background="{TemplateBinding Background}"/>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</RepeatButton.Style>
												</RepeatButton>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb x:Name="Thumb">
													<Thumb.Style>
														<Style TargetType="{x:Type Thumb}">
															<Setter Property="OverridesDefaultStyle" Value="True"/>
															<Setter Property="Foreground" Value="{x:Null}"/>
															<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
															<Setter Property="Width" Value="21"/>
															<Setter Property="Height" Value="11"/>
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type Thumb}">
																		<Microsoft_Windows_Themes:ClassicBorderDecorator Background="{TemplateBinding Background}" BorderStyle="Raised" BorderThickness="3,3,3,3">
																			<Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
																				<SolidColorBrush/>
																			</Microsoft_Windows_Themes:ClassicBorderDecorator.BorderBrush>
																			<Rectangle Opacity="0.5" Margin="-1,-1,-1,-1" Fill="{TemplateBinding Foreground}"/>
																		</Microsoft_Windows_Themes:ClassicBorderDecorator>
																		<ControlTemplate.Triggers>
																			<Trigger Property="IsDragging" Value="True">
																				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																			</Trigger>
																			<Trigger Property="IsEnabled" Value="False">
																				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</Thumb.Style>
												</Thumb>
											</Track.Thumb>
										</Track>
										<TickBar Visibility="Collapsed" x:Name="RightTick" Width="4" Grid.Column="2" Grid.RowSpan="3" Fill="{TemplateBinding Foreground}" Placement="Right"/>
									</Grid>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="TickPlacement" Value="TopLeft">
										<Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
										<Setter Property="Style" TargetName="Thumb">
											<Setter.Value>
												<Style TargetType="{x:Type Thumb}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="Foreground" Value="{x:Null}"/>
													<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
													<Setter Property="Width" Value="21"/>
													<Setter Property="Height" Value="11"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Thumb}">
																<Canvas SnapsToDevicePixels="True">
																	<Path Fill="{TemplateBinding Background}" Data="M21,11L21,0 6,0 0,5 0,6 6,11z"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1" Data="M20,0.5L5.5,0.5 0.5,5 0.5,5.5"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Data="M0.5,5.5L0.5,6 5.5,10.5 20.5,10.5 20.5,0"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1" Data="M19,1.5L5.5,1.5 1.5,5 1.5,5.5"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" Data="M1.5,5.5L1.5,6 5.5,9.5 19.5,9.5 19.5,1"/>
																	<Path Opacity="0.5" Fill="{TemplateBinding Foreground}" Data="M19,9L19,2 6,2 2,5.5 6,9z"/>
																</Canvas>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsDragging" Value="True">
																		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" TargetName="TrackBackground" Value="3,0,0,0"/>
									</Trigger>
									<Trigger Property="TickPlacement" Value="BottomRight">
										<Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
										<Setter Property="Style" TargetName="Thumb">
											<Setter.Value>
												<Style TargetType="{x:Type Thumb}">
													<Setter Property="OverridesDefaultStyle" Value="True"/>
													<Setter Property="BorderThickness" Value="0,0,0,0"/>
													<Setter Property="Foreground" Value="{x:Null}"/>
													<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
													<Setter Property="Width" Value="21"/>
													<Setter Property="Height" Value="11"/>
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Thumb}">
																<Canvas SnapsToDevicePixels="True">
																	<Path Fill="{TemplateBinding Background}" Data="M0,11L0,0 15,0 21,5 21,6 15,11z"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1" Data="M0.5,10L0.5,0.5 15.5,0.5 20.5,5 20.5,5.5"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Data="M20.5,5.5L20.5,6 15.5,10.5 0,10.5"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1" Data="M1.5,9L1.5,1.5 15.5,1.5 19.5,5 19.5,5.5"/>
																	<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" Data="M19.5,5.5L19.5,6 15.5,9.5 1,9.5"/>
																	<Path Opacity="0.5" Fill="{TemplateBinding Foreground}" Data="M2,9L2,2 15,2 19,5.5 15,9"/>
																</Canvas>
																<ControlTemplate.Triggers>
																	<Trigger Property="IsDragging" Value="True">
																		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																	</Trigger>
																	<Trigger Property="IsEnabled" Value="False">
																		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Setter.Value>
										</Setter>
										<Setter Property="Margin" TargetName="TrackBackground" Value="0,0,3,0"/>
									</Trigger>
									<Trigger Property="TickPlacement" Value="Both">
										<Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
										<Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
									</Trigger>
									<Trigger Property="IsSelectionRangeEnabled" Value="True">
										<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="ToolBarStyle" TargetType="{x:Type ToolBar}">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#FFE2E0DB" Offset="0"/>
						<GradientStop Color="#FFEAE8E4" Offset="0.5"/>
						<GradientStop Color="#FFD5D2CA" Offset="0.9"/>
						<GradientStop Color="#FFDBD8D1" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToolBar}">
						<Grid Margin="3,1,1,1" x:Name="Grid" SnapsToDevicePixels="True">
							<Grid HorizontalAlignment="Right" x:Name="OverflowGrid">
								<ToggleButton FocusVisualStyle="{x:Null}" x:Name="OverflowButton" IsEnabled="{TemplateBinding HasOverflowItems}" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="#33FFFFFF" Margin="0,0,0,0">
									<ToggleButton.Style>
										<Style TargetType="{x:Type ToggleButton}">
											<Setter Property="Background">
												<Setter.Value>
													<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
														<GradientStop Color="#FFE6E6E6" Offset="0"/>
														<GradientStop Color="#FFD2D2D2" Offset="0.5"/>
														<GradientStop Color="#FF808080" Offset="1"/>
													</LinearGradientBrush>
												</Setter.Value>
											</Setter>
											<Setter Property="MinHeight" Value="0"/>
											<Setter Property="MinWidth" Value="0"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type ToggleButton}">
														<Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" CornerRadius="3,3,3,3">
															<Canvas HorizontalAlignment="Center" Margin="3,4,3,0" VerticalAlignment="Center" Width="6" Height="7" SnapsToDevicePixels="True">
																<Path Stroke="#FFFFFFFF" Data="M1,1.5L6,1.5"/>
																<Path Stroke="{TemplateBinding Foreground}" Data="M0,0.5L5,0.5"/>
																<Path Fill="#FFFFFFFF" Data="M0.5,4L6.5,4 3.5,7z"/>
																<Path Fill="{TemplateBinding Foreground}" Data="M-0.5,3L5.5,3 2.5,6z"/>
															</Canvas>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver" Value="True">
																<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
															</Trigger>
															<Trigger Property="IsKeyboardFocused" Value="True">
																<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="#FFA0A0A0"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</ToggleButton.Style>
								</ToggleButton>
								<Popup x:Name="OverflowPopup" Focusable="False" AllowsTransparency="True" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False">
									<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#00FFFFFF">
										<Border Background="#7FF9F8F7" BorderBrush="#FF666666" BorderThickness="1,1,1,1">
											<ToolBarOverflowPanel FocusVisualStyle="{x:Null}" Margin="2,2,2,2" x:Name="PART_ToolBarOverflowPanel" Focusable="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
										</Border>
									</Microsoft_Windows_Themes:SystemDropShadowChrome>
								</Popup>
							</Grid>
							<Border Margin="0,0,11,0" x:Name="MainPanelBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,3,3" Padding="{TemplateBinding Padding}">
								<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
									<ContentPresenter HorizontalAlignment="Center" Margin="4,0,4,0" x:Name="ToolBarHeader" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
									<ToolBarPanel Margin="0,1,2,2" x:Name="PART_ToolBarPanel" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" IsItemsHost="True"/>
								</DockPanel>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsOverflowOpen" Value="True"/>
							<Trigger Property="Header" Value="{x:Null}">
								<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
							</Trigger>
							<Trigger Property="ToolBarTray.IsLocked" Value="True"/>
							<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="True">
								<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
								<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="True"/>
								<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
							</Trigger>
							<Trigger Property="Orientation" Value="Vertical">
								<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
								<Setter Property="Style" TargetName="OverflowButton">
									<Setter.Value>
										<Style TargetType="{x:Type ToggleButton}">
											<Setter Property="Background">
												<Setter.Value>
													<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
														<GradientStop Color="#FFE6E6E6" Offset="0"/>
														<GradientStop Color="#FFD2D2D2" Offset="0.5"/>
														<GradientStop Color="#FF808080" Offset="1"/>
													</LinearGradientBrush>
												</Setter.Value>
											</Setter>
											<Setter Property="MinHeight" Value="0"/>
											<Setter Property="MinWidth" Value="0"/>
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type ToggleButton}">
														<Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
															<Canvas HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6" SnapsToDevicePixels="True">
																<Path Stroke="#FFFFFFFF" Data="M1.5,1L1.5,6"/>
																<Path Stroke="{TemplateBinding Foreground}" Data="M0.5,0L0.5,5"/>
																<Path Fill="#FFFFFFFF" Data="M3.5,0.5L7,3.5 4,6.5z"/>
																<Path Fill="{TemplateBinding Foreground}" Data="M3,-0.5L6,2.5 3,5.5z"/>
															</Canvas>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver" Value="True">
																<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
															</Trigger>
															<Trigger Property="IsKeyboardFocused" Value="True">
																<Setter Property="Background" TargetName="Bd" Value="#FFB6BDD2"/>
															</Trigger>
															<Trigger Property="IsEnabled" Value="False">
																<Setter Property="Foreground" Value="#FFA0A0A0"/>
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</Setter.Value>
								</Setter>
								<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
								<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
								<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
								<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
								<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
								<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
								<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
								<Setter Property="Background">
									<Setter.Value>
										<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
											<GradientStop Color="#FFE2E0DB" Offset="0"/>
											<GradientStop Color="#FFEAE8E4" Offset="0.5"/>
											<GradientStop Color="#FFD5D2CA" Offset="0.9"/>
											<GradientStop Color="#FFDBD8D1" Offset="1"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</ResourceDictionary>
	</Application.Resources>
</Application>